name: Pulumi-AWS-EKS
on:
  workflow_dispatch:
    inputs:
      aws_access_id:
        description: 'AWS Access Key Id'
        required: true
      aws_secret_id:
        description: 'Secret Access Key'
        required: true
      aws_region_id:
        description: 'AWS DEFAULT Region'
        required: true
        default: 'us-east-1'
      cluster_number_id:
        description: 'Clusters number'
        required: true
        default: '3'

env:
  PULUMI_CONFIG_PASSPHRASE: ""
  CLUSTER_NUMBER: ${{ github.event.inputs.cluster_number_id }}
  AWS_DEFAULT_REGION: ${{ github.event.inputs.aws_region_id }}
  AWS_ACCESS_KEY_ID: ${{ github.event.inputs.aws_access_id }}
  AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.aws_secret_id }}

jobs:
  kind-clustermesh:
    strategy:
      fail-fast: false
      matrix:
        dir:
          - ./eks-clustermesh-optimisation
    name: Cluster Mesh EKS
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.dir }}
    steps:
      - uses: actions/checkout@v4
      - uses: cilium/cilium-cli@404d52692f62eebb7211fdacd114848995ada1b7
        with:
          skip-build: true
          release-version: v0.16.14
      - name: Setup Python ‚ú®
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Clean disk
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Installing dependencies üì¶Ô∏è
        run: pip install -r requirements.txt

      - uses: pulumi/actions@v5

      - name: Create stack
        run: pulumi login --local && pulumi stack init dev && pulumi config set --stack dev clusterNumber $CLUSTER_NUMBER

      - uses: pulumi/actions@v5
        with:
          work-dir: ${{ matrix.dir }}
          command: up
          stack-name: dev
          cloud-url: file://~

      - name: Check Cluster Mesh
        run: |
          for i in $(seq 1 $CLUSTER_NUMBER)
          do
            echo "Cluster: kind-cmesh$i"
            cilium status --context=kind-cmesh$i --wait
            cilium clustermesh status --context=kind-cmesh$i --wait
          done
            echo "Cluster Connectivity test kind-cmesh1 and kind-cmesh2"
          cilium connectivity test --context kind-cmesh1 --multi-cluster kind-cmesh2

      - name: Remove cilium Pulumi resource
        run: |
          for state in $(pulumi stack --stack dev --show-urns | grep cilium | grep URN | awk '{print $NF}')
          do
            pulumi state delete --stack dev --target-dependents '$state'
          done

      - uses: pulumi/actions@v5
        with:
          work-dir: ${{ matrix.dir }}
          command: destroy
          stack-name: dev
          cloud-url: file://~
